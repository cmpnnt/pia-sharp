name: "Publish Linux to Nuget"

on:
  workflow_dispatch 
jobs:
  get_version_numbers:
    runs-on: ubuntu-latest
    outputs:
      ctl-version-number: ${{ steps.get-ctl-version.outputs.version }}
      di-version-number: ${{ steps.get-di-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Get Cmpnnt.Pia.Ctl Version
        id: get-ctl-version
        env:
          regex: '##\s\[([0-9\.]+)\]\s-\s[0-9]{4}-[0-9]{2}-[0-9]{2}'
        run: echo version=$(sed -nr "s/$regex/\1/p" Cmpnnt.Pia.Ctl/Changelog.md | head -n1) >> $GITHUB_OUTPUT
      - name: Get Cmpnnt.Pia.DependencyInjection Version
        id: get-di-version
        env:
          regex: '##\s\[([0-9\.]+)\]\s-\s[0-9]{4}-[0-9]{2}-[0-9]{2}'
        run: echo version=$(sed -nr "s/$regex/\1/p" Cmpnnt.Pia.DependencyInjection/Changelog.md | head -n1) >> $GITHUB_OUTPUT
  add_nuget_source:
    runs-on: ubuntu-latest
    steps:
      - name: Add Github Nuget Source
        id: add-github-nuget-source
        run: dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/cmpnnt/index.json"
  package_linux:
    runs-on: ubuntu-latest
    needs: get_version_numbers
    steps:
      - uses: actions/checkout@v4
      - name: Create Package for Linux
        id: create-package-linux
        run: dotnet pack -c Release --nologo -p:PackageVersion=${{ needs.get-ctl-version-number.outputs.ctl-version-number }} Cmpnnt.Pia.Ctl/Cmpnnt.Pia.Ctl.csproj
  #TODO: dotnet pack -c Release --nologo -p:PackageVersion=${{ needs.get-ctl-version-number.outputs.ctl-version-number }}
  # and remove the `version` property from the .csproj files. The version number should come only from the changelog
  # package on PR to verify but only push the package on main
  
  
# TODO: Consider other fail fast items and CI job order and dependencies